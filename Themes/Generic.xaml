<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:local="clr-namespace:MySimpleLauncher"
    xmlns:u="clr-namespace:MySimpleLauncher.Component"
    xmlns:component="clr-namespace:MySimpleLauncher.Component">

    <FontFamily x:Key="DefaultFontFamily" >Meiryo UI</FontFamily>
    <system:Double x:Key="DefaultFonSize">14.0</system:Double>
    <SolidColorBrush x:Key="DefaultTextForeground" Color="#333333"/>
    <SolidColorBrush x:Key="GuideTextLabel" Color="#B1B8CC"/>


    <Style TargetType="TextBlock" >
        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource DefaultFonSize}" />
        <Setter Property="Foreground" Value="{StaticResource DefaultTextForeground}" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    
    <Style TargetType="CheckBox" >
        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource DefaultFonSize}" />
        <Setter Property="Foreground" Value="{StaticResource DefaultTextForeground}" />
    </Style>

    <Style TargetType="TabControl">
        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource DefaultFonSize}" />
        <Setter Property="Foreground" Value="{StaticResource DefaultTextForeground}" />
    </Style>

    <Style TargetType="TextBox" x:Key="BaseTextBoxStyle">
        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource DefaultFonSize}" />
        <Setter Property="Foreground" Value="{StaticResource DefaultTextForeground}" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="BorderBrush" Value="#EEEEEE" />
        <Setter Property="MaxLength" Value="15" />
        <Setter Property="Margin" Value="3,4" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

    <Style TargetType="TextBox" BasedOn="{StaticResource BaseTextBoxStyle}" />
    <Style TargetType="component:CustomTextBox" BasedOn="{StaticResource BaseTextBoxStyle}" />
    

    <!--<Style TargetType="ListView">
        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource DefaultFonSize}" />
        <Setter Property="Foreground" Value="{StaticResource DefaultTextForeground}" />
    </Style>-->
    <Style TargetType="ListViewItem">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource DefaultFonSize}" />
        <Setter Property="Foreground" Value="{StaticResource DefaultTextForeground}" />
        <Setter Property="Margin" Value="5,0" />
    </Style>

    <Style x:Key="LabelButton" TargetType="Button">
        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource DefaultFonSize}" />
        <Setter Property="Foreground" Value="#495780" />
        <Setter Property="Margin" Value="10,5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <TextBlock  Text="{TemplateBinding Content}"
                                Foreground="{TemplateBinding Foreground}"
                                TextWrapping="Wrap" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Foreground" Value="#67759E" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True" >
                <Setter Property="Foreground" Value="#2B3962" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False" >
                <Setter Property="Foreground" Value="Gainsboro" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style  x:Key="ListViewDefItem" TargetType="ListViewItem">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Border BorderBrush="Transparent" BorderThickness="1" Background="{TemplateBinding Background}">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True" >
                <Setter Property="Background" Value="#FFE6E0E0" />
                <Setter Property="BorderBrush" Value="#FFE6E0E0" />
                <Setter Property="Foreground" Value="{StaticResource DefaultTextForeground}" />
            </Trigger>
        </Style.Triggers>

    </Style>


    <!--// context menu
        // https://stackoverflow.com/questions/34888636/change-background-color-of-menuitem-on-mouseover
        // https://stackoverflow.com/questions/20359687/wpf-context-menu-custom-style-issue
        // https://stackoverflow.com/questions/5276826/system-windows-controls-menuitem-without-icon-area/24630712#24630712-->
    <Style  TargetType="MenuItem" x:Key="MenuItemStyle">
        <Setter Property="OverridesDefaultStyle" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="Border" BorderThickness="1">
                        <Grid Height="22">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0" SharedSizeGroup="Icon" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                                <ColumnDefinition Width="13" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon"/>
                            <ContentPresenter x:Name="HeaderHost" Margin="3,0,3,0" Grid.Column="1" VerticalAlignment="Center" ContentSource="Header" RecognizesAccessKey="True" TextOptions.TextFormattingMode="Display" />
                            <Path x:Name="RightArrow" Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 0 7 L 4 3.5 Z" Fill="#49a3e1" />
                            <Popup x:Name="Popup" Placement="Right" HorizontalOffset="-4" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                                <Border x:Name="SubmenuBorder" SnapsToDevicePixels="True" Background="White" BorderThickness="1" BorderBrush="#49a3e1">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Background" TargetName="Border" Value="#49a3e1"/>
                            <Setter Property="Fill" TargetName="RightArrow" Value="White"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="false">
                            <Setter Property="Foreground" Value="Red"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                            <Setter TargetName="SubmenuBorder" Property="Padding" Value="3" />
                            <Setter Property="Foreground" Value="Black"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="Pink"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--https://www.k-karakuri.com/entry/2017/09/19/WPF%E3%81%AEXAML%E3%81%AEListView%E3%81%AE%E3%83%9E%E3%82%A6%E3%82%B9%E3%82%AA%E3%83%BC%E3%83%90%E3%83%BC%E3%82%84%E9%81%B8%E6%8A%9E%E6%99%82%E3%81%AE%E3%83%8F%E3%82%A4%E3%83%A9%E3%82%A4%E3%83%88%E3%82%92-->
    <Style TargetType="ListViewItem" x:Key="ContainerStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="GridViewColumnHeaderGripper"
   TargetType="Thumb">
        <Setter Property="Width"
      Value="18" />
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0"
                       EndPoint="0,1">
                    <LinearGradientBrush.GradientStops>
                        <GradientStopCollection>
                            <GradientStop Color="{DynamicResource BorderLightColor}"
                      Offset="0.0" />
                            <GradientStop Color="{DynamicResource BorderDarkColor}"
                      Offset="1.0" />
                        </GradientStopCollection>
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}"
            Background="Transparent">
                        <Rectangle HorizontalAlignment="Center"
                 Width="1"
                 Fill="{TemplateBinding Background}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1"
                       StartPoint="0.5,0">
                    <GradientStop Color="Black"
                  Offset="0" />
                    <GradientStop Color="White"
                  Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="GridViewColumnHeader" x:Key="GridViewColumnHeaderStyle" BasedOn="{StaticResource {x:Type GridViewColumnHeader}}">
        <!--<Setter Property="OverridesDefaultStyle" Value="False"/>-->
        <!-- https://stackoverflow.com/questions/48047206/wpf-listview-column-header-resize-with-custom-style -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Grid>
                    <Border BorderBrush="#EEEEEE" BorderThickness="1" Background="{TemplateBinding Background}" Width="{TemplateBinding Width}" >
                        <TextBlock x:Name="ContentHeader" Text="{TemplateBinding Content}" Padding="5" TextAlignment="Center" />
                    </Border>
                        <Thumb x:Name="PART_HeaderGripper"
             HorizontalAlignment="Right"
             Margin="0,0,-9,0"
             Style="{StaticResource GridViewColumnHeaderGripper}" />
                    </Grid>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
        <!--<Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True" >
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True" >
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Background" Value="#DDDDDD" />
            </Trigger>
        </Style.Triggers>-->
    </Style>

    <Style TargetType="GridViewColumnHeader" x:Key="GridViewColumnHeaderDisabledStyle" BasedOn="{StaticResource GridViewColumnHeaderStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Border BorderBrush="#EEEEEE" BorderThickness="1" Background="{TemplateBinding Background}">
                        <TextBlock x:Name="ContentHeader" Text="{TemplateBinding Content}" Padding="5" Width="{TemplateBinding Width}" TextAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True" >
                <Setter Property="Cursor" Value="Arrow" />
            </Trigger>
        </Style.Triggers>
    </Style>


</ResourceDictionary>
